# ===============================
# 元组
# ===============================
# 有序项目集合，可以存放任何数据对象，不可变数据类型

# tuple() 类型转换  lst = []  tu = tuple(lst)

# str int list tuple 工厂函数

# tu = (1) 与 tu = (1.)  只有一个元素，需要在元素后面接逗号，否则被识别为整型，括号被认为是结合运算

# =====================================
# 元组可以使用切片操作

# 元组内包列表，列表里的元素是可以变的
# tu = ('a', [1, 2])
# tu[1].append(3)
# print(tu)

# 元组赋值
# a, b =(1, 2)  # a=1 b=2

# =====================================
# 适应场景，写死的元素，如男女



# =======================================
#         字典
# =======================================
# 字典是python中的一个键值映射的数据结构
# 字典是无序的
# 字典是可变对象
# key是唯一的，天生去重，key必须是可hash对象（不可变对象）
# d = {}
# print(type(d))
# '''
# <class 'dict'>
# '''

# 类型转换函数dict()


# d2 = {'apple':10, 'banana':7}   # apple:key  10:val
# print(d2['apple'])
# '''
# 10
# '''


# 字典可以嵌套
# d3 = {'root': {'passwd': '123456', 'money': 1000}}
# print(d3['root'])
# '''
# {'passwd': '123456', 'money': 1000}
# '''
# print(d3['root']['passwd'])
# '''
# 123456
# '''
# ===================================
# 新增、修改、取值
# ===================================

# 查看
# ===================================
# dict[key]  # 当key不存在时报错
# d = {'a': 3, 'b': 4, 'c': 5}
# print(d['a'])
# '''
# 3
# '''
# dict.get()
# ===================================
# d.get('d', 0)  # 获取d的值，没有就返回0
# print(d.get('d', 0))
# '''
# 0
# '''
# print(d.get('d', ))
# '''
# None
# '''

# 新增和修改
# ====================================
# dict[key] = value
# 如果key存在，则为修改；key不在，则为新增


# 删除
# ==================================
# dict.pop(key)
# dict.popitem()

# d = {'a': 3, 'b': 4, 'c': 5}
# print(d.pop('a'))
# print(d)
# d.popitem()          # 默认删后面的一个
# print(d)

# 字典合并 dict1.update(dict2)
# =====================================
# d1 = {'a': 4, 'b': 5}
# d2 = {'c': 1, 'd': 6}
# d1.update(d2)   # 更新d1
# print(d1)
# '''
# {'a': 4, 'b': 5, 'c': 1, 'd': 6}
# '''
# 字典没有加法

# dict(d1, **d2)  # 创造新的数组

# 成员关系，默认用key判断
# 判断value dict.values() 得到value的数组   dict.keys() 得到key的数组

# 字典的遍历
# ==================================
# for i in dict:
#     print(i)
# '''
# 相当于for i in dict.keys
# '''

# d1 = {'a': 4, 'b': 5}
# for i, j in d1.items():  # 取得元组
#     print(f"{i}--{j}")

# 集合
# ========================================
# 无序
# 集合可以看作是一个只有key的字典
# 集合的元素必须是可hash的，天生去重

# s = {}
# set() # 类型转换函数

# 集合添加
# =========================================
# s = {1, 2, 3, 4}
# s.add(5)           # 默认在末位添加一项
# print(s)
# """
# {1, 2, 3, 4, 5}
# """

# s.update()   # 传入可迭代对象

# 删除
# =========================================
# s = {1, 2, 3, 4}
# s.remove()    # 不会报错
# s.discard()   # 会报错


# 集合的运算
# =========================================
# 交集，并，差

# 交 s1 & s2
# 并 s1 | s2
# 差 s1 - s2
# 并减交 s1 ^ s2

# max()  min()  sum()
# =========================================


# 字典练习
# =========================================
# company = {'BOSS': '唐僧', 'CTO': '悟空', 'CFO': '八戒', '板砖': '沙僧', '苦力': '白龙马'}
# 打印CTO信息
# 打印BOSS信息
# 打印company中所有人物及角色
# 判断白骨精和悟空（接受用户输入）是否在company中
# company = {'BOSS': '唐僧', 'CTO': '悟空', 'CFO': '八戒', '板砖': '沙僧', '苦力': '白龙马'}
# print(f'CTO信息：{company["CTO"]}')
# print(f'CFO信息：{company["CFO"]}')
# for i, j in company.items():
#     print(f'{i}是{j}')
# name = input("请输入要查询的人：")
# list = company.values()
#
# for i in list:
#     if i == name:
#         print(f'{name}在company中')
#         break
#     else:
#         print(f'{name}不在company中')
#         break
# '''
# CTO信息：悟空
# CFO信息：八戒
# BOSS是唐僧
# CTO是悟空
# CFO是八戒
# 板砖是沙僧
# 苦力是白龙马
# 请输入要查询的人：唐僧
# 唐僧在company中
#
# '''


# ==============================================================
# 用户检测验证系统
# 进入系统打印'欢迎进入用户检测验证系统'
# 定义一个用户表，包含用户名和密码：{'root': '123456', 'admin': 'admin'}
# 键盘输入用户名和密码
# 判断用户名和密码是否正确，并给予相应提示
# 当用户输入'quit'的时候，退出查找
# print('欢迎进入用户检测验证系统')
# dict = {'root': '123456', 'admin': 'admin'}
# clc = 1
# while(clc):
#     name = input('请输入用户名：')
#     passwd = input("请输入密码：")
#     for i, j in dict.items():
#         if i ==name and j == passwd:
#             print('登录成功！')
#             clc = 0
#             break
#
#         else:
#             print('用户名或密码错误，请重新输入用户名和密码')
#             break
#     command = input()
#     if command == 'quit':
#         clc = 0

# ===================================================================================
# 互送礼物
# 对于每一个员工，系统会随机抽取一位送礼物的对象，送礼对象不能重复，最终每个人都能送出和收到一份礼物
# 定义好公司员工名单
# 打印最终的送礼和收礼关系

# 哈希， hash算法 单向加密